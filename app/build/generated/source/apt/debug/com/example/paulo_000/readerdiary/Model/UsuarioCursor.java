package com.example.paulo_000.readerdiary.Model;

import java.util.List;

import io.objectbox.BoxStore;
import io.objectbox.Cursor;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.internal.CursorFactory;
import io.objectbox.relation.ToMany;

// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * ObjectBox generated Cursor implementation for "Usuario".
 * Note that this is a low-level class: usually you should stick to the Box class.
 */
public final class UsuarioCursor extends Cursor<Usuario> {
    @Internal
    static final class Factory implements CursorFactory<Usuario> {
        @Override
        public Cursor<Usuario> createCursor(io.objectbox.Transaction tx, long cursorHandle, BoxStore boxStoreForEntities) {
            return new UsuarioCursor(tx, cursorHandle, boxStoreForEntities);
        }
    }

    private static final Usuario_.UsuarioIdGetter ID_GETTER = Usuario_.__ID_GETTER;


    private final static int __ID_nome = Usuario_.nome.id;
    private final static int __ID_email = Usuario_.email.id;
    private final static int __ID_senha = Usuario_.senha.id;

    public UsuarioCursor(io.objectbox.Transaction tx, long cursor, BoxStore boxStore) {
        super(tx, cursor, Usuario_.__INSTANCE, boxStore);
    }

    @Override
    public final long getId(Usuario entity) {
        return ID_GETTER.getId(entity);
    }

    /**
     * Puts an object into its box.
     *
     * @return The ID of the object within its box.
     */
    @Override
    public final long put(Usuario entity) {
        String nome = entity.getNome();
        int __id1 = nome != null ? __ID_nome : 0;
        String email = entity.getEmail();
        int __id2 = email != null ? __ID_email : 0;
        String senha = entity.getSenha();
        int __id3 = senha != null ? __ID_senha : 0;

        long __assignedId = collect313311(cursor, entity.getId(), PUT_FLAG_FIRST | PUT_FLAG_COMPLETE,
                __id1, nome, __id2, email,
                __id3, senha, 0, null,
                0, 0, 0, 0,
                0, 0, 0, 0,
                0, 0, 0, 0,
                0, 0, 0, 0);

        entity.setId(__assignedId);

        attachEntity(entity);
        checkApplyToManyToDb(entity.getLivros(), Livro.class);
        return __assignedId;
    }

    private void attachEntity(Usuario entity) {
        // Transformer will create __boxStore field in entity and init it here:
        // entity.__boxStore = boxStoreForEntities;
    }

}
